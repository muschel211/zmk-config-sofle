/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>



/ {

     keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp F1    &kp F2     &kp F3    &kp F4  &kp F5      &kp F6                            &kp F7    &kp F8       &kp F9   &kp F10  &kp F11    &kp F12
 &kp ESC     &kp X      &kp V     &kp L   &kp C       &kp W                             &kp K     &kp H        &kp G     &kp F    &kp Q  &kp MINUS
 &kp TAB     &kp U      &kp I     &kp A   &kp E       &kp O                             &kp S     &kp N        &kp R     &kp T    &kp D      &kp Z
  &tog 1  &kp LBKT   &kp SEMI   &kp SQT   &kp P       &kp Y  &kp C_MUTE    &snip      &kp B     &kp M  &commaminus   &kp DOT    &kp J     &tog 4
                    &kp LCTRL  &kp LALT   &mo 3  &kp LSHIFT       &mo 2    &kp RET  &kp SPACE  &kp BSPC      &kp DEL  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        qwertz_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
 &kp F1  &kp F2     &kp F3    &kp F4    &kp F5      &kp F6                            &kp F7    &kp F8     &kp F9   &kp F10       &kp F11   &kp F12
 &kp ESC   &kp Q      &kp W     &kp E     &kp R       &kp T                             &kp Y     &kp U      &kp I     &kp O         &kp P  &kp LBKT
 &kp TAB   &kp A      &kp S     &kp D     &kp F       &kp G                             &kp H     &kp J      &kp K     &kp L      &kp SEMI   &kp SQT
  &tog 1   &kp Z      &kp X     &kp C     &kp V       &kp B  &kp C_MUTE  &snip      &kp N     &kp M  &kp COMMA   &kp DOT  &kp KP_MINUS    &tog 4
                  &kp LCTRL  &kp LALT  &mo 3  &kp LSHIFT    &mo 2    &kp RET  &kp SPACE  &kp BSPC    &kp DEL  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        neo2_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&kp N1         &kp N2         &kp N3        &kp N4        &kp N5         &kp N6                                &kp N7          &kp N8        &kp N9      &kp N0         &trans     &trans
 &trans        &punkte  &kp RS(SLASH)    &kp RA(N8)    &kp RA(N9)      &kp GRAVE                            &kp LS(N1)        &kp NUBS  &kp LS(NUBS)  &kp LS(N0)     &kp LS(N6)       &klf
 &trans  &kp RA(MINUS)     &kp RS(N7)    &kp RA(N7)    &kp RA(N0)   &kp RS(RBKT)                         &kp RS(MINUS)      &kp RS(N8)    &kp RS(N9)   &kp SLASH    &kp RS(DOT)  &kp RA(Q)
  &tog 1       &kp NUHS     &kp RS(N4)  &kp RA(NUBS)  &kp RA(RBKT)  &kp RS(EQUAL)  &kp C_MUTE  &snip       &kp RBKT      &kp RS(N5)    &kp RS(N2)   &kp EQUAL  &kp RS(COMMA)     &tog 4
                            &kp LCTRL      &kp LALT         &mo 3     &kp LSHIFT       &mo 2    &kp RET      &kp SPACE  &kp BSPC  &kp DEL    &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

// ------------------------------------------------------------------------------------------------------------
// |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
// |EXTPWR|RGB_HUD|RGB_HUI|RGB_SAD|RGB_SAI|RGB_EFF|                |      |      |       |      |       |       |
// |      |RGB_BRD|RGB_BRI|       |       |       |                |      |      |       |      |       |       |
// |      |       |       |       |       |       |RGB_TOG| |      |      |      |       |      |       |       |
//                |       |       |       |       |       | |      |      |      |       |      |

        neo3_layer {
        bindings = <
&bt BT_CLR                      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                                    &none &none &none &none &none &none
&ext_power EXT_POWER_TOGGLE_CMD &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                                 &none &none &none &none &none &none
&none                           &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                           &none &none &none &none &none &none
&none                           &none           &none           &none           &none           &none               &rgb_ug RGB_TOG  &none      &none &none &none &none &none &none
                                                &none           &none           &none           &none               &none            &none      &none &none &none &none
        >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

        };

        config_layer {
        bindings = <
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4           &bt BT_CLR                                &kp F7      &kp F8    &kp F9     &kp F10    &neolock         &kp KP_NUMLOCK
   &kp ESC           &trans           &trans           &trans           &trans           &trans                                    &kp PG_UP     &kp END    &kp UP    &kp HOME    &kp INS          &trans
       &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                                    &kp PG_DN    &kp LEFT  &kp DOWN   &kp RIGHT    &kp DEL  &mt RCTRL CLCK
       &trans       &bt BT_CLR  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI       &trans       &trans           &kp SLCK  &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp S          &tog 4
                                         &trans           &trans           &trans           &trans  &bootloader  &bootloader  &ext_power EP_TOG      &trans    &trans      &trans
        >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

        };

    };
};
/ {
    behaviors {
        commaminus: comma_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_MINUS";
            #binding-cells = <0>;
            bindings =
                <&kp COMMA>,
                <&kp KP_MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        punkte: punkte {
            label = "ZM_punkte";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N3 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };
        klf: klf {
            label = "ZM_klf";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N3 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };
        snip: snip {
            label = "ZM_snip";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
              <&macro_press &kp LGUI &kp LSHFT>
			, <&macro_tap &kp S>
			, <&macro_release &kp LGUI &kp LSHFT>;
        };
        neolock: neolock {
            label = "ZM_neolock";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
              <&macro_press &kp LSHIFT &kp CAPS>
			, <&macro_tap &kp TAB>
			, <&macro_release &kp LSHIFT &kp CAPS>;
        };
    };
};
